package exercise1;

import java.awt.Component;
import java.security.SecureRandom;
import javax.swing.JOptionPane;

public class Test {
    private int correctAnswers = 0;
    private int incorrectAnswers = 0;
    private SecureRandom randomGenerator = new SecureRandom();

    public Test() {
    }

    public void inputAnswer() {
        for(int i = 1; i <= 5; ++i) {
            this.simulateQuestion(i);
        }

        this.displayResults();
    }

    private void simulateQuestion(int questionNumber) {
        String question = "";
        String[] options = new String[4];
        int correctOption = 0;
        switch (questionNumber) {
            case 1:
                question = "What is SecureRandom?";
                options = new String[]{"A cryptographic random number generator", "A linear congruential generator", "A type of encryption", "None of the above"};
                correctOption = 1;
                break;
            case 2:
                question = "What is the range of random integers generated by Random's nextInt(1000)?";
                options = new String[]{"0 to 1000", "0 to 999", "1 to 1000", "1 to 999"};
                correctOption = 2;
                break;
            case 3:
                question = "Which of these is a method in Random class?";
                options = new String[]{"nextDouble()", "generateInt()", "nextSecure()", "None of the above"};
                correctOption = 1;
                break;
            case 4:
                question = "Which method is used to generate secure random numbers?";
                options = new String[]{"nextSecureInt()", "nextRandomInt()", "None of the above", "nextInt()"};
                correctOption = 4;
                break;
            case 5:
                question = "What is the difference between Random and SecureRandom?";
                options = new String[]{"No difference", "SecureRandom is more predictable", "Random is slowerSecure", "Random is cryptographically secure"};
                correctOption = 4;
        }

        StringBuilder questionWithOptions = new StringBuilder(question);

        for(int i = 0; i < options.length; ++i) {
            questionWithOptions.append("\n").append(i + 1).append(". ").append(options[i]);
        }

        String userResponseStr = JOptionPane.showInputDialog(questionWithOptions.toString());
        int userResponse = Integer.parseInt(userResponseStr.trim());
        this.checkAnswer(userResponse, correctOption);
    }

    private void checkAnswer(int userResponse, int correctOption) {
        if (userResponse == correctOption) {
            ++this.correctAnswers;
            this.generateMessage(true);
        } else {
            ++this.incorrectAnswers;
            this.generateMessage(false);
        }

    }

    private void generateMessage(boolean isCorrect) {
        int messageIndex = this.randomGenerator.nextInt(4);
        String message;
        if (isCorrect) {
            switch (messageIndex) {
                case 0 -> message = "Excellent!";
                case 1 -> message = "Good!";
                case 2 -> message = "Keep up the good work!";
                case 3 -> message = "Nice work!";
                default -> message = "Well done!";
            }
        } else {
            switch (messageIndex) {
                case 0 -> message = "No. Please try again";
                case 1 -> message = "Wrong. Try once more";
                case 2 -> message = "Don't give up!";
                case 3 -> message = "No. Keep trying..";
                default -> message = "Incorrect. Keep going!";
            }
        }

        JOptionPane.showMessageDialog((Component)null, message);
    }

    private void displayResults() {
        int totalQuestions = this.correctAnswers + this.incorrectAnswers;
        double percentage = (double)this.correctAnswers / (double)totalQuestions * 100.0;
        JOptionPane.showMessageDialog((Component)null, "Correct Answers: " + this.correctAnswers + "\nIncorrect Answers: " + this.incorrectAnswers + "\nPercentage Correct: " + percentage + "%");
    }
}